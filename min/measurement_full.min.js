!function(){"use strict";function e(e){l.forEach(e,function(e,i){t(e||{},i)})}function t(e,t){var i={};l.forEach(e.units,function(e,t){i[t]={name:t,displayName:e.displayName||t||"",symbol:e.symbol||"",isSymbolPrefix:e.isSymbolPrefix||!1,otherSymbols:e.otherSymbols||[],type:e.type||"",multiplier:e.multiplier||1,offset:e.offset||0,isEstimation:e.isEstimation||!1,usage:e.usage||[],range:e.range||[]}}),n[t]={name:t,symbol:e.symbol||"",baseUnit:e.baseUnit||l.firstPropertyName(i)||"",units:i||{}}}var i,n,s,o,r,a,m,u,l,y=2;n={},s={yotta:{name:"yotta",symbol:"Y",multiplier:1e24},zetta:{name:"zetta",symbol:"Z",multiplier:1e21},exa:{name:"exa",symbol:"E",multiplier:1e18},peta:{name:"peta",symbol:"P",multiplier:1e15},tera:{name:"tera",symbol:"T",multiplier:1e12},giga:{name:"giga",symbol:"G",multiplier:1e9},mega:{name:"mega",symbol:"M",multiplier:1e6},kilo:{name:"kilo",symbol:"k",multiplier:1e3},hecto:{name:"hecto",symbol:"h",multiplier:100,isRare:!0},deca:{name:"deca",symbol:"da",multiplier:10,isRare:!0},deci:{name:"deci",symbol:"d",multiplier:.1,isRare:!0},centi:{name:"centi",symbol:"c",multiplier:.01},milli:{name:"milli",symbol:"m",multiplier:.001},micro:{name:"micro",symbol:"µ",multiplier:1e-6},nano:{name:"nano",symbol:"n",multiplier:1e-9},pico:{name:"pico",symbol:"p",multiplier:1e-12},femto:{name:"femto",symbol:"f",multiplier:1e-15},atto:{name:"atto",symbol:"a",multiplier:1e-18},zepto:{name:"zepto",symbol:"z",multiplier:1e-21},yocto:{name:"yocto",symbol:"y",multiplier:1e-24}},o={yobi:{name:"yobi",symbol:"Yi",multiplier:Math.pow(y,80)},zebi:{name:"zebi",symbol:"Zi",multiplier:Math.pow(y,70)},exbi:{name:"exbi",symbol:"Ei",multiplier:Math.pow(y,60)},pebi:{name:"pebi",symbol:"Pi",multiplier:Math.pow(y,50)},tebi:{name:"tebi",symbol:"Ti",multiplier:Math.pow(y,40)},gibi:{name:"gibi",symbol:"Gi",multiplier:Math.pow(y,30)},mebi:{name:"mebi",symbol:"Mi",multiplier:Math.pow(y,20)},kibi:{name:"kibi",symbol:"Ki",multiplier:Math.pow(y,10)}};"yotta_zetta_exa_peta_tera_giga_mega_kilo_hecto_deca_deci_centi_milli_micro_nano_pico_femto_atto_zepto_yocto".split("_"),"Y_Z_E_P_T_G_M_k_h_da_d_c_m_µ_n_p_f_a_z_y".split("_"),"yobi_zebi_exbi_pebi_tebi_gibi_mebi_kibi".split("_"),"Yi_Zi_Ei_Pi_Ti_Gi_Mi_Ki".split("_");l={isNode:function(){return"undefined"!=typeof module&&"undefined"!=typeof module.exports},isAmd:function(){return"function"==typeof define&&define.amd},firstPropertyName:function(e){var t;for(t in e)if(e.hasOwnProperty(t))return t},forEach:function(e,t){var i,n;n=l.isArray(e);for(i in e)e.hasOwnProperty(i)&&t(e[i],n?parseInt(i):i,e)},isString:function(e){return"string"==typeof e},isNumber:function(e){return"number"==typeof e},isArray:function(e){return"[object Array]"===Object.prototype.toString.call(e)},isObject:function(e){return"object"==typeof e&&!l.isArray(e)}},i=function(e,t,n){var s;if(t||n)n?s={value:e,system:t,unit:n}:(s={value:e},n=t,l.isArray(n)||l.isObject(n)?s.dimensions=n:(s.unit=n,s.system=i.systemOfUnit(n)));else if(l.isNumber(e))s={value:e};else if(s=JSON.parse(e),null===s||"object"!=typeof s)throw new Error("Invalid parameters provided.");return new a(s.value,s.system,s.unit||s.dimensions)},i.configure=function(){},i.setSystems=function(e){if(e)if("object"==typeof e)n=e;else{if(!isNode())throw new Error("Cannot load file from string in client. Provide object instead.");n=require(e)}else;},i.filterUnits=function(){},i.add=function(t){t&&t.systems&&e(t.systems)},i.system=function(e){var t;if(t=n[e],!t)throw new Error('Specified system "'+e+'" does not exist');return t},i.hasSystem=function(e){return n[e]?!0:!1},i.unit=function(e,t){var n,s;if(n=i.system(e),s=n.units[t],!s)throw new Error('Specified unit "'+t+'" does not exist in the system "'+e+'"');return s},i.hasUnit=function(e,t){var n;return i.hasSystem(e)?(n=i.system(e),n.units[t]?!0:!1):!1},i.systemOfUnit=function(e){var t;return l.forEach(n,function(n,s){i.hasUnit(s,e)&&(t=s)}),t},i.baseUnit=function(e,t){var n=i.system(e),s=i.unit(e,t);n.baseUnit=s.name},r=function(){function e(e,t,n){var s;if(t)s={system:e,unit:t,power:n};else if(s=e,!l.isObject(s))if(i.systemOfUnit(s))s={unit:s};else if(s=JSON.parse(s),null===s||"object"!=typeof s)throw new Error("Invalid parameters provided.");this.unitName=s.unitName||s.unit,this.systemName=s.systemName||s.system||i.systemOfUnit(s.unitName||s.unit),this.power=null!==s.power&&void 0!==s.power?s.power:1}function t(t){return t&&t.constructor===e}function n(e,t,i,n){var s,o;for(o=e,s=0;s<Math.abs(t);s++)o=(n?t>0:0>t)?o*i.multiplier+i.offset:(o-i.offset)/i.multiplier;return o}return e.prototype.validate=function(){if(i.unit(this.systemName,this.unitName),0===this.power)throw new Exception("Dimensions may not have a power of 0")},e.prototype.unitIsBaseUnit=function(){return i.system(this.systemName).baseUnit===this.unitName},e.prototype.convert=function(e,t){var i=this.convertToBase();return i.dimension.convertFromBase(i.value,t)},e.prototype.convertToBase=function(e){var t,s,o;return this.unitIsBaseUnit()?{dimension:this.clone(),value:e}:(t=i.unit(this.systemName,this.unitName),s=i.system(this.systemName).baseUnit,o=i.unit(this.systemName,s),{dimension:new r(this.systemName,s,this.power),value:n(e,this.power,t,!0)})},e.prototype.convertFromBase=function(e,t){var s;if(!this.unitIsBaseUnit())throw new Error("The existing unit is not a base unit");return s=i.unit(this.systemName,t),{dimension:new r(this.systemName,t,this.power),value:n(e,this.power,s,!1)}},e.prototype.combine=function(e,t){var i,n,s;if(t.validate(),this.systemName!==t.systemName)throw new Error("Dimensions have different systems");return this.unitName!==t.unitName?(i=t.convert(e,this.unitName),s=i.value,n=this.power+i.dimension.power):(s=e,n=this.power+t.power),{dimension:new r(this.systemName,this.unitName,n),value:s}},e.prototype.isCommensurableMatch=function(e){if(!t(e))throw new Error("Provided parameter must be a Dimension");return this.systemName===e.systemName&&this.power===e.power},e.prototype.clone=function(){return new r(this.systemName,this.unitName,this.power)},e.prototype.invert=function(){return new r(this.systemName,this.unitName,-this.power)},e.prototype.serialised=function(){return{system:this.systemName,unit:this.unitName,power:this.power}},e.prototype.toJson=function(){return JSON.stringify(this.serialised())},e.prototype.toShortString=function(){var e,t;return e=i.unit(this.systemName,this.unitName),t=e.symbol,1!==this.power&&(t+="^"+this.power),t},e}(),a=function(){function e(e,t,i){var n,s=this;this.value=e,this.systemName=t,this.dimensions=[],l.isArray(i)?l.forEach(i,function(e){n=new r(e),n.validate(),s.dimensions.push(n)}):i&&(n=new r(t,i),n.validate(),this.dimensions.push(n)),this.validate()}function t(t){return t&&t.constructor===e}function n(e,t){var n,s;return s=[],n=e.value,l.forEach(e.dimensions,function(e){var o;i.hasUnit(e.systemName,t)?(o=e.convertFromBase(n,t),n=o.value,s.push(o.dimension)):s.push(e.clone())}),new a(n,e.systemName,s)}function s(e,t){return new a(t(e.value),e.systemName,e.dimensions)}return e.prototype.validate=function(){if("number"!=typeof this.value)throw new Error("The value of a quantity must be a number")},e.prototype.simplify=function(){var e=[],t=[],i=this.value,n=this;return l.forEach(this.dimensions,function(s,o){var r,a,m;if(!(t.indexOf(o)>=0)&&0!==s.power){for(r=s.clone(),a=o+1;a<n.dimensions.length;a++)s.systemName===n.dimensions[a].systemName&&(m=r.combine(i,n.dimensions[a]),r=m.dimension,i=m.value,t.push(a));0!==r.power&&e.push(r),t.push(o)}}),new a(this.value,this.systemName,e)},e.prototype.allDimensionsUsingBaseUnit=function(){var e=!0;return l.forEach(this.dimensions,function(t){t.unitIsBaseUnit()||(e=!1)}),e},e.prototype.isScalar=function(){return 0===this.dimensions.length},e.prototype.isCommensurable=function(e){if(!t(e))throw new Error("Cannot check the commensurability of something that is not a Quantity");if(0===this.dimensions.length&&0===e.dimensions.length)return!0;var i=this.simplify(),n=e.simplify();if(i.dimensions.length!==n.dimensions.length)return!1;var s=!0;return l.forEach(i.dimensions,function(e){var t=!1;l.forEach(n.dimensions,function(i){e.isCommensurableMatch(i)&&(t=!0)}),t||(s=!1)}),s},e.prototype.convert=function(e){var i,s=this.convertToBase();if(t(e)){if(!this.isCommensurable(e))throw new Error("In order to convert based upon a quantity they must be commensurable");i=s,l.forEach(e.dimensions,function(e){i=n(i,e.unitName)})}else i=n(s,e);return i},e.prototype.convertToBase=function(e){var t,i;return i=[],t=this.value,l.forEach(this.dimensions,function(n){var s;e&&n.unitName!==e?i.push(n.clone()):(s=n.convertToBase(t),t=s.value,i.push(s.dimension))}),new a(t,this.systemName,i)},e.prototype.multiply=function(e){if(l.isNumber(e))return new a(this.value*e,this.systemName,this.dimensions);if(!t(e))throw new Error("Cannot multiply something that is not a number or a Quantity.");var i=[];l.forEach(this.dimensions,function(e){i.push(e.clone())}),l.forEach(e.dimensions,function(e){i.push(e.clone())});var n=new a(this.value*e.value,this.systemName,i);return n.simplify()},e.prototype.divide=function(e){if(l.isNumber(e))return new a(this.value/e,this.systemName,this.dimensions);if(!t(e))throw new Error("Cannot divide something that is not a number or a Quantity.");var i=[];l.forEach(this.dimensions,function(e){i.push(e.clone())}),l.forEach(e.dimensions,function(e){i.push(e.invert())});var n=new a(this.value/e.value,this.systemName,i);return n.simplify()},e.prototype.add=function(e){if(l.isNumber(e))return new a(this.value+e,this.systemName,this.dimensions);if(!t(e))throw new Error("Cannot add something that is not a number or a Quantity");var i=e.convert(this);return new a(this.value+i.value,this.systemName,this.dimensions)},e.prototype.subtract=function(e){if(l.isNumber(e))return new a(this.value-e,this.systemName,this.dimensions);if(!t(e))throw new Error("Cannot subtract something that is not a number or a Quantity");var i=e.convert(this);return new a(this.value-i.value,this.systemName,this.dimensions)},e.prototype.times=function(e){return this.multiply(e)},e.prototype.plus=function(e){return this.add(e)},e.prototype.minus=function(e){return this.subtract(e)},e.prototype.abs=function(){return s(this,Math.abs)},e.prototype.acos=function(){return s(this,Math.acos)},e.prototype.asin=function(){return s(this,Math.asin)},e.prototype.atan=function(){return s(this,Math.atan)},e.prototype.ceil=function(){return s(this,Math.ceil)},e.prototype.cos=function(){return s(this,Math.cos)},e.prototype.exp=function(){return s(this,Math.exp)},e.prototype.floor=function(){return s(this,Math.floor)},e.prototype.log=function(){return s(this,Math.log)},e.prototype.round=function(){return s(this,Math.round)},e.prototype.sin=function(){return s(this,Math.sin)},e.prototype.sqrt=function(){return s(this,Math.sqrt)},e.prototype.tan=function(){return s(this,Math.tan)},e.prototype.atan2=function(e){return new a(Math.atan2(e,this.value),this.systemName,this.dimensions)},e.prototype.pow=function(e){return new a(Math.pow(this.value,e),this.systemName,this.dimensions)},e.prototype.max=function(){var e=[this.value].concat(Array.prototype.slice.call(arguments));return new a(Math.max.apply(null,e),this.systemName,this.dimensions)},e.prototype.min=function(){var e=[this.value].concat(Array.prototype.slice.call(arguments));return new a(Math.min.apply(null,e),this.systemName,this.dimensions)},e.prototype.serialised=function(){var e;return e={value:this.value},this.systemName&&(e.system=this.systemName),1===this.dimensions.length&&1===this.dimensions[0].power?e.unit=this.dimensions[0].unitName:this.dimensions.length>0&&(e.dimensions=[],l.forEach(this.dimensions,function(t){e.dimensions.push(t.serialised())})),e},e.prototype.toJson=function(){return JSON.stringify(this.serialised())},e.prototype.toShortFixed=function(e){var t=" ";return l.forEach(this.dimensions,function(e){t+=e.toShortString()}),t.length<=1&&(t=""),this.value.toFixed(e)+t},e.prototype.toShortPrecision=function(e){var t=" ";return l.forEach(this.dimensions,function(e){t+=e.toShortString()}),t.length<=1&&(t=""),this.value.toPrecision(e)+t},e}(),m={systems:{time:{symbol:"T",otherNames:["duration"],baseUnit:"second",units:{second:{symbol:"s",otherSymbols:["sec"],type:"si"},minute:{symbol:"min",type:"customary",multiplier:60},hour:{symbol:"h",otherSymbols:["hr"],type:"customary",multiplier:3600},day:{symbol:"day",type:"customary",multiplier:86400,notes:"Possible Base"},week:{symbol:"week",type:"customary",multiplier:604800},month:{symbol:"month",type:"customary",estimation:!0,multiplier:2629740,notes:"Possible Base"},year:{symbol:"yr",type:"customary",multiplier:31557600,notes:"Possible Base"},ke:{symbol:"ke",type:"customary",systems:["traditional Chinese"],multiplier:864},decade:{symbol:"decade",type:"customary",multiplier:315576e3},century:{symbol:"C",type:"customary",multiplier:315576e4},millennium:{symbol:"M",type:"customary",multiplier:315576e5}}},length:{symbol:"L",otherNames:["distance","radius","wavelength"],baseUnit:"metre",units:{metre:{symbol:"m",type:"si"}}},mass:{symbol:"M",baseUnit:"kilogram",units:{}},electricCurrent:{symbol:"I",baseUnit:"ampere",units:{}},temperature:{symbol:"Θ",baseUnit:"kelvin",units:{kelvin:{symbol:"K",type:"si"},celsius:{symbol:"C",type:"si",offset:273.15},fahrenheit:{symbol:"F",type:"customary",multiplier:.5555555555555556,offset:255.37222222},rankine:{symbol:"R",otherSymbols:["Ra"],type:"customary",multiplier:1.8,notes:"Check values"},romer:{symbol:"Rø",otherSymbols:["R"],type:"customary",multiplier:.525,offset:135.90375,notes:"Technically Rømer (or Roemer). Check values"},newton:{symbol:"N",type:"customary",multiplier:.33,offset:90.13949999999998,notes:"May have rounding error. Check values"},delisle:{symbol:"D",type:"customary",multiplier:-1.5,offset:-559.7249999999999,notes:"May have rounding error. Check values"},reaumur:{symbol:"Ré",otherSymbols:["Re","R"],type:"customary",multiplier:-1.5,offset:-559.7249999999999,notes:"Technically Réaumur. Check values"}}},amountOfSubstance:{symbol:"N",baseUnit:"mole",units:{}},luminousIntensity:{symbol:"J",baseUnit:"candela",units:{}},volume:{symbol:"V",baseUnit:"litre",derived:"length*length*length",units:{}},area:{symbol:"A",baseUnit:"metreSquared",derived:"length*length",units:{}},pressure:{symbol:"P",baseUnit:"pascal",derived:"mass/length/time/time",units:{}},frequency:{symbol:"f",baseUnit:"hertz",derived:"1/time",units:{}},force:{symbol:"F",otherNames:["weight"],baseUnit:"newton",derived:"mass*length/time/time",units:{}},speed:{symbol:"v",baseUnit:"metresPerSecond",derived:"length/time",units:{}},acceleration:{symbol:"a",baseUnit:"metresPerSecondSquared",derived:"length/time/time",units:{}},energy:{symbol:"E",otherNames:["work","heat"],baseUnit:"joule",derived:"mass*length*length/time/time",units:{}},power:{symbol:"P",baseUnit:"watt",derived:"mass*length*length/time/time/time",units:{}},electricCharge:{symbol:"Q",otherNames:["charge"],baseUnit:"coulomb",derived:"electricCurrent/time",units:{}},electricPotential:{symbol:"Φ",otherNames:["voltage","electricFieldPotential","electrostaticPotential"],baseUnit:"volt",derived:"mass*length*length/electricCurrent/time/time/time",units:{}},electricResistance:{symbol:"R",otherNames:["resistance"],baseUnit:"ohm",derived:"mass*length*length/time/time/time/electricCurrent/electricCurrent",units:{}},capacitance:{symbol:"C",baseUnit:"farad",derived:"time*time*time*time*electricCurrent*electricCurrent/length/length/mass",units:{}},information:{symbol:"i",otherNames:["data"],baseUnit:"bit",units:{bit:{symbol:"b",type:"binary"},"byte":{symbol:"B",type:"binary",multiplier:8}}}},siPrefixes:[],siBinaryPrefixes:[]},i.add(m||{}),u=function(){function e(){}return e}(),l.isNode()?module.exports=i:l.isAmd()?define([],function(){return i}):window.measurement=i}();