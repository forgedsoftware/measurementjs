!function(){"use strict";function t(t){u.forEach(t,function(t,i){e(t||{},i)})}function e(t,e){var i={};u.forEach(t.units,function(t,e){i[e]={name:e,displayName:t.displayName||e||"",symbol:t.symbol||"",isSymbolPrefix:t.isSymbolPrefix||!1,otherSymbols:t.otherSymbols||[],type:t.type||"",multiplier:t.multiplier||1,offset:t.offset||0,isEstimation:t.isEstimation||!1,usage:t.usage||[],range:t.range||[]}}),s[e]={name:e,symbol:t.symbol||"",baseUnit:t.baseUnit||u.firstPropertyName(i)||"",units:i||{}}}var i,s,n,o,r,a,m,u,l=2;s={},n={yotta:{name:"yotta",symbol:"Y",multiplier:1e24},zetta:{name:"zetta",symbol:"Z",multiplier:1e21},exa:{name:"exa",symbol:"E",multiplier:1e18},peta:{name:"peta",symbol:"P",multiplier:1e15},tera:{name:"tera",symbol:"T",multiplier:1e12},giga:{name:"giga",symbol:"G",multiplier:1e9},mega:{name:"mega",symbol:"M",multiplier:1e6},kilo:{name:"kilo",symbol:"k",multiplier:1e3},hecto:{name:"hecto",symbol:"h",multiplier:100,isRare:!0},deca:{name:"deca",symbol:"da",multiplier:10,isRare:!0},deci:{name:"deci",symbol:"d",multiplier:.1,isRare:!0},centi:{name:"centi",symbol:"c",multiplier:.01},milli:{name:"milli",symbol:"m",multiplier:.001},micro:{name:"micro",symbol:"µ",multiplier:1e-6},nano:{name:"nano",symbol:"n",multiplier:1e-9},pico:{name:"pico",symbol:"p",multiplier:1e-12},femto:{name:"femto",symbol:"f",multiplier:1e-15},atto:{name:"atto",symbol:"a",multiplier:1e-18},zepto:{name:"zepto",symbol:"z",multiplier:1e-21},yocto:{name:"yocto",symbol:"y",multiplier:1e-24}},o={yobi:{name:"yobi",symbol:"Yi",multiplier:Math.pow(l,80)},zebi:{name:"zebi",symbol:"Zi",multiplier:Math.pow(l,70)},exbi:{name:"exbi",symbol:"Ei",multiplier:Math.pow(l,60)},pebi:{name:"pebi",symbol:"Pi",multiplier:Math.pow(l,50)},tebi:{name:"tebi",symbol:"Ti",multiplier:Math.pow(l,40)},gibi:{name:"gibi",symbol:"Gi",multiplier:Math.pow(l,30)},mebi:{name:"mebi",symbol:"Mi",multiplier:Math.pow(l,20)},kibi:{name:"kibi",symbol:"Ki",multiplier:Math.pow(l,10)}};"yotta_zetta_exa_peta_tera_giga_mega_kilo_hecto_deca_deci_centi_milli_micro_nano_pico_femto_atto_zepto_yocto".split("_"),"Y_Z_E_P_T_G_M_k_h_da_d_c_m_µ_n_p_f_a_z_y".split("_"),"yobi_zebi_exbi_pebi_tebi_gibi_mebi_kibi".split("_"),"Yi_Zi_Ei_Pi_Ti_Gi_Mi_Ki".split("_");u={isNode:function(){return"undefined"!=typeof module&&"undefined"!=typeof module.exports},isAmd:function(){return"function"==typeof define&&define.amd},firstPropertyName:function(t){var e;for(e in t)if(t.hasOwnProperty(e))return e},forEach:function(t,e){var i,s;s=u.isArray(t);for(i in t)t.hasOwnProperty(i)&&e(t[i],s?parseInt(i):i,t)},isString:function(t){return"string"==typeof t},isNumber:function(t){return"number"==typeof t},isArray:function(t){return"[object Array]"===Object.prototype.toString.call(t)},isObject:function(t){return"object"==typeof t&&!u.isArray(t)},toSuperScript:function(t){var e,i,s="",n={0:"⁰",1:"¹",2:"²",3:"³",4:"⁴",5:"⁵",6:"⁶",7:"⁷",8:"⁸",9:"⁹","-":"⁻"};for(e=t.toString(),i=0;i<e.length;i++)s+=n[e[i]];return s},splice:function(t,e,i){return t.slice(0,e)+i+t.slice(e)}},i=function(t,e,s){var n;if(e||s)s?n={value:t,system:e,unit:s}:(n={value:t},s=e,u.isArray(s)||u.isObject(s)?n.dimensions=s:(n.unit=s,n.system=i.systemOfUnit(s)));else if(u.isNumber(t))n={value:t};else if(n=JSON.parse(t),null===n||"object"!=typeof n)throw new Error("Invalid parameters provided.");return new a(n.value,n.system,n.unit||n.dimensions)},i.configure=function(){},i.setSystems=function(t){if(t)if("object"==typeof t)s=t;else{if(!isNode())throw new Error("Cannot load file from string in client. Provide object instead.");s=require(t)}else;},i.filterUnits=function(){},i.add=function(e){e&&e.systems&&t(e.systems)},i.system=function(t){var e;if(e=s[t],!e)throw new Error('Specified system "'+t+'" does not exist');return e},i.hasSystem=function(t){return s[t]?!0:!1},i.unit=function(t,e){var s,n;if(s=i.system(t),n=s.units[e],!n)throw new Error('Specified unit "'+e+'" does not exist in the system "'+t+'"');return n},i.hasUnit=function(t,e){var s;return i.hasSystem(t)?(s=i.system(t),s.units[e]?!0:!1):!1},i.systemOfUnit=function(t){var e;return u.forEach(s,function(s,n){i.hasUnit(n,t)&&(e=n)}),e},i.baseUnit=function(t,e){var s=i.system(t),n=i.unit(t,e);s.baseUnit=n.name},r=function(){function t(t,e,s){var n;if(e)n={system:t,unit:e,power:s};else if(n=t,!u.isObject(n))if(i.systemOfUnit(n))n={unit:n};else if(n=JSON.parse(n),null===n||"object"!=typeof n)throw new Error("Invalid parameters provided.");this.unitName=n.unitName||n.unit,this.systemName=n.systemName||n.system||i.systemOfUnit(n.unitName||n.unit),this.power=null!==n.power&&void 0!==n.power?n.power:1}function e(e){return e&&e.constructor===t}function s(t,e,i,s){var n,o;for(o=t,n=0;n<Math.abs(e);n++)o=(s?e>0:0>e)?o*i.multiplier+i.offset:(o-i.offset)/i.multiplier;return o}return t.prototype.validate=function(){if(i.unit(this.systemName,this.unitName),0===this.power)throw new Exception("Dimensions may not have a power of 0")},t.prototype.unitIsBaseUnit=function(){return i.system(this.systemName).baseUnit===this.unitName},t.prototype.convert=function(t,e){var i=this.convertToBase();return i.dimension.convertFromBase(i.value,e)},t.prototype.convertToBase=function(t){var e,n,o;return this.unitIsBaseUnit()?{dimension:this.clone(),value:t}:(e=i.unit(this.systemName,this.unitName),n=i.system(this.systemName).baseUnit,o=i.unit(this.systemName,n),{dimension:new r(this.systemName,n,this.power),value:s(t,this.power,e,!0)})},t.prototype.convertFromBase=function(t,e){var n;if(!this.unitIsBaseUnit())throw new Error("The existing unit is not a base unit");return n=i.unit(this.systemName,e),{dimension:new r(this.systemName,e,this.power),value:s(t,this.power,n,!1)}},t.prototype.combine=function(t,e){var i,s,n;if(e.validate(),this.systemName!==e.systemName)throw new Error("Dimensions have different systems");return this.unitName!==e.unitName?(i=e.convert(t,this.unitName),n=i.value,s=this.power+i.dimension.power):(n=t,s=this.power+e.power),{dimension:new r(this.systemName,this.unitName,s),value:n}},t.prototype.isCommensurableMatch=function(t){if(!e(t))throw new Error("Provided parameter must be a Dimension");return this.systemName===t.systemName&&this.power===t.power},t.prototype.clone=function(){return new r(this.systemName,this.unitName,this.power)},t.prototype.invert=function(){return new r(this.systemName,this.unitName,-this.power)},t.prototype.serialised=function(){return{system:this.systemName,unit:this.unitName,power:this.power}},t.prototype.toJson=function(){return JSON.stringify(this.serialised())},t.prototype.format=function(t){var e,s;if(e=i.unit(this.systemName,this.unitName),t.fullName){var n=[];this.power<0&&n.push("per"),n.push(this.unitName);var o=Math.abs(this.power);2===o?n.push("squared"):3===o?n.push("cubed"):o>3&&n.push("to the power of "+o),s=n.join(" ")}else if(s=e.symbol,t.showAllPowers||1!==this.power){var r=t.ascii?"^"+this.power:u.toSuperScript(this.power);s+=r}return s},t}(),a=function(){function t(t,e,i){var s,n=this;this.value=t,this.systemName=e,this.dimensions=[],u.isArray(i)?u.forEach(i,function(t){s=new r(t),s.validate(),n.dimensions.push(s)}):i&&(s=new r(e,i),s.validate(),this.dimensions.push(s)),this.validate()}function e(e){return e&&e.constructor===t}function s(t,e){var s,n;return n=[],s=t.value,u.forEach(t.dimensions,function(t){var o;i.hasUnit(t.systemName,e)?(o=t.convertFromBase(s,e),s=o.value,n.push(o.dimension)):n.push(t.clone())}),new a(s,t.systemName,n)}function n(t,e){return new a(e(t.value),t.systemName,t.dimensions)}return t.prototype.validate=function(){if("number"!=typeof this.value)throw new Error("The value of a quantity must be a number")},t.prototype.simplify=function(){var t=[],e=[],i=this.value,s=this;return u.forEach(this.dimensions,function(n,o){var r,a,m;if(!(e.indexOf(o)>=0)&&0!==n.power){for(r=n.clone(),a=o+1;a<s.dimensions.length;a++)n.systemName===s.dimensions[a].systemName&&(m=r.combine(i,s.dimensions[a]),r=m.dimension,i=m.value,e.push(a));0!==r.power&&t.push(r),e.push(o)}}),new a(this.value,this.systemName,t)},t.prototype.allDimensionsUsingBaseUnit=function(){var t=!0;return u.forEach(this.dimensions,function(e){e.unitIsBaseUnit()||(t=!1)}),t},t.prototype.isDimensionless=function(){return 0===this.dimensions.length},t.prototype.isCommensurable=function(t){if(!e(t))throw new Error("Cannot check the commensurability of something that is not a Quantity");if(0===this.dimensions.length&&0===t.dimensions.length)return!0;var i=this.simplify(),s=t.simplify();if(i.dimensions.length!==s.dimensions.length)return!1;var n=!0;return u.forEach(i.dimensions,function(t){var e=!1;u.forEach(s.dimensions,function(i){t.isCommensurableMatch(i)&&(e=!0)}),e||(n=!1)}),n},t.prototype.convert=function(t){var i,n=this.convertToBase();if(e(t)){if(!this.isCommensurable(t))throw new Error("In order to convert based upon a quantity they must be commensurable");i=n,u.forEach(t.dimensions,function(t){i=s(i,t.unitName)})}else i=s(n,t);return i},t.prototype.convertToBase=function(t){var e,i;return i=[],e=this.value,u.forEach(this.dimensions,function(s){var n;t&&s.unitName!==t?i.push(s.clone()):(n=s.convertToBase(e),e=n.value,i.push(n.dimension))}),new a(e,this.systemName,i)},t.prototype.multiply=function(t){if(u.isNumber(t))return new a(this.value*t,this.systemName,this.dimensions);if(!e(t))throw new Error("Cannot multiply something that is not a number or a Quantity.");var i=[];u.forEach(this.dimensions,function(t){i.push(t.clone())}),u.forEach(t.dimensions,function(t){i.push(t.clone())});var s=new a(this.value*t.value,this.systemName,i);return s.simplify()},t.prototype.divide=function(t){if(u.isNumber(t))return new a(this.value/t,this.systemName,this.dimensions);if(!e(t))throw new Error("Cannot divide something that is not a number or a Quantity.");var i=[];u.forEach(this.dimensions,function(t){i.push(t.clone())}),u.forEach(t.dimensions,function(t){i.push(t.invert())});var s=new a(this.value/t.value,this.systemName,i);return s.simplify()},t.prototype.add=function(t){if(u.isNumber(t))return new a(this.value+t,this.systemName,this.dimensions);if(!e(t))throw new Error("Cannot add something that is not a number or a Quantity");var i=t.convert(this);return new a(this.value+i.value,this.systemName,this.dimensions)},t.prototype.subtract=function(t){if(u.isNumber(t))return new a(this.value-t,this.systemName,this.dimensions);if(!e(t))throw new Error("Cannot subtract something that is not a number or a Quantity");var i=t.convert(this);return new a(this.value-i.value,this.systemName,this.dimensions)},t.prototype.times=function(t){return this.multiply(t)},t.prototype.plus=function(t){return this.add(t)},t.prototype.minus=function(t){return this.subtract(t)},t.prototype.abs=function(){return n(this,Math.abs)},t.prototype.acos=function(){return n(this,Math.acos)},t.prototype.asin=function(){return n(this,Math.asin)},t.prototype.atan=function(){return n(this,Math.atan)},t.prototype.ceil=function(){return n(this,Math.ceil)},t.prototype.cos=function(){return n(this,Math.cos)},t.prototype.exp=function(){return n(this,Math.exp)},t.prototype.floor=function(){return n(this,Math.floor)},t.prototype.log=function(){return n(this,Math.log)},t.prototype.round=function(){return n(this,Math.round)},t.prototype.sin=function(){return n(this,Math.sin)},t.prototype.sqrt=function(){return n(this,Math.sqrt)},t.prototype.tan=function(){return n(this,Math.tan)},t.prototype.atan2=function(t){return new a(Math.atan2(t,this.value),this.systemName,this.dimensions)},t.prototype.pow=function(t){return new a(Math.pow(this.value,t),this.systemName,this.dimensions)},t.prototype.max=function(){var t=[this.value].concat(Array.prototype.slice.call(arguments));return new a(Math.max.apply(null,t),this.systemName,this.dimensions)},t.prototype.min=function(){var t=[this.value].concat(Array.prototype.slice.call(arguments));return new a(Math.min.apply(null,t),this.systemName,this.dimensions)},t.prototype.clone=function(){return new a(this.value,this.systemName,this.dimensions)},t.prototype.serialised=function(){var t;return t={value:this.value},this.systemName&&(t.system=this.systemName),1===this.dimensions.length&&1===this.dimensions[0].power?t.unit=this.dimensions[0].unitName:this.dimensions.length>0&&(t.dimensions=[],u.forEach(this.dimensions,function(e){t.dimensions.push(e.serialised())})),t},t.prototype.toJson=function(){return JSON.stringify(this.serialised())},t.prototype.format=function(t){t=t||{},"undefined"==typeof t.sort&&(t.sort=!0);var e="";e+="undefined"!=typeof t.fixed?this.value.toFixed(t.fixed):this.value.toPrecision(t.precision);var i=e.indexOf(".");-1===i&&(i=e.length);var s=i-(t.separatorCount||3);if(e=e.replace(".",t.decimal||"."),t.separator)for(;s>0;)e=u.splice(e,s,t.separator),s-=t.separatorCount||3;if(t.expandExponent){var n=e.indexOf("e");if(n>-1){var o=Math.floor(Math.log(this.value)/Math.log(10));e=e.slice(0,n);var r=t.ascii?"^"+o:u.toSuperScript(o);e+=" x 10"+r}}var a=[],m=this.clone().dimensions;t.sort&&m.sort(function(t,e){return e.power-t.power}),u.forEach(m,function(e){a.push(e.format(t))});var l=t.fullName?" ":t.unitSeparator||"",p=a.join(l);return t.onlyValue?e:t.onlyDimensions?p:(p.length>0&&(e+=" "),e+p)},t}(),m=function(){function t(){}return t}();var p={systems:{time:{symbol:"T",otherNames:["duration"],baseUnit:"second",units:{}},length:{symbol:"L",otherNames:["distance","radius","wavelength"],baseUnit:"metre",units:{mile:{symbol:"mi",type:"customary",systems:["imperial"],multiplier:1609.344},yard:{symbol:"yd",type:"customary",systems:["imperial"],multiplier:.9144},foot:{symbol:"ft",otherSymbols:["'"],type:"customary",systems:["imperial"],multiplier:.3048},inch:{symbol:"in",otherSymbols:['"'],type:"customary",systems:["imperial"],multiplier:.0254},furlong:{type:"customary",systems:["imperial","usCustomary","nautical"],multiplier:201.168}}},mass:{symbol:"M",baseUnit:"kilogram",units:{ounce:{symbol:"oz",otherSymbols:["oz av"],type:"customary",systems:["imperial","avoirdupois"],multiplier:.028349523125},pound:{symbol:"lb",otherSymbols:["lb av"],type:"customary",systems:["imperial","avoirdupois"],multiplier:.45359237},stone:{symbol:"st",type:"customary",systems:["imperial"],multiplier:6.35029318},tonLong:{symbol:"ton",otherSymbols:["long tn"],type:"customary",systems:["imperial"],multiplier:1016.0469088},tonShort:{symbol:"ton",otherSymbols:["sh tn"],type:"customary",systems:["imperial"],multiplier:907.18474},hundredweightLong:{symbol:"cwt",otherSymbols:["long cwt"],otherNames:["centum weight"],type:"customary",systems:["imperial"],multiplier:50.802345},hundredweightShort:{symbol:"sh cwt",otherNames:["cental","centum weight"],type:"customary",systems:["usCustomary"],multiplier:45.359237}}},temperature:{symbol:"Θ",baseUnit:"kelvin",units:{}},volume:{symbol:"V",baseUnit:"metreCubed",derived:"length*length*length",units:{}},area:{symbol:"A",baseUnit:"metreSquared",derived:"length*length",units:{}},pressure:{symbol:"P",baseUnit:"pascal",derived:"mass/length/time/time",units:{}},speed:{symbol:"v",baseUnit:"metrePerSecond",derived:"length/time",units:{}},acceleration:{symbol:"a",baseUnit:"metresPerSecondSquared",derived:"length/time/time",units:{feetPerSecondSquared:{symbol:"fps²",otherSymbols:["ft/s²"],type:"customary",systems:["usCustomary","imperial"],multiplier:.3048}}},energy:{symbol:"E",otherNames:["work","heat"],baseUnit:"joule",derived:"mass*length*length/time/time",units:{}},density:{symbol:"ρ",baseUnit:"kilogramPerMetreCubed",derived:"mass/length/length/length",units:{}},information:{symbol:"i",otherNames:["data"],baseUnit:"bit",units:{}}},siPrefixes:[],siBinaryPrefixes:[]};i.add(p||{}),u.isNode()?module.exports=i:u.isAmd()?define([],function(){return i}):window.measurement=i}();