var systems={systems:"This is currently a stub"};!function(){"use strict";function t(t){l.forEach(t,function(t,i){e(t||{},i)})}function e(t,e){var i={};l.forEach(t.units,function(t,e){e=t.name,i[e]={name:e,displayName:t.displayName||e||"",symbol:t.symbol||"",isSymbolPrefix:t.isSymbolPrefix||!1,otherSymbols:t.otherSymbols||[],type:t.type||"",multiplier:t.multiplier||1,offset:t.offset||0,isEstimation:t.isEstimation||!1,usage:t.usage||[],range:t.range||[]}}),n[e]={name:e,symbol:t.symbol||"",baseUnit:t.baseUnit||l.firstPropertyName(i)||"",units:i||[]}}var i,n,s,o,r,a,m,u,l,y=2;n={},s={yotta:{name:"yotta",symbol:"Y",multiplier:1e24},zetta:{name:"zetta",symbol:"Z",multiplier:1e21},exa:{name:"exa",symbol:"E",multiplier:1e18},peta:{name:"peta",symbol:"P",multiplier:1e15},tera:{name:"tera",symbol:"T",multiplier:1e12},giga:{name:"giga",symbol:"G",multiplier:1e9},mega:{name:"mega",symbol:"M",multiplier:1e6},kilo:{name:"kilo",symbol:"k",multiplier:1e3},hecto:{name:"hecto",symbol:"h",multiplier:100,isRare:!0},deca:{name:"deca",symbol:"da",multiplier:10,isRare:!0},deci:{name:"deci",symbol:"d",multiplier:.1,isRare:!0},centi:{name:"centi",symbol:"c",multiplier:.01},milli:{name:"milli",symbol:"m",multiplier:.001},micro:{name:"micro",symbol:"µ",multiplier:1e-6},nano:{name:"nano",symbol:"n",multiplier:1e-9},pico:{name:"pico",symbol:"p",multiplier:1e-12},femto:{name:"femto",symbol:"f",multiplier:1e-15},atto:{name:"atto",symbol:"a",multiplier:1e-18},zepto:{name:"zepto",symbol:"z",multiplier:1e-21},yocto:{name:"yocto",symbol:"y",multiplier:1e-24}},o={yobi:{name:"yobi",symbol:"Yi",multiplier:Math.pow(y,80)},zebi:{name:"zebi",symbol:"Zi",multiplier:Math.pow(y,70)},exbi:{name:"exbi",symbol:"Ei",multiplier:Math.pow(y,60)},pebi:{name:"pebi",symbol:"Pi",multiplier:Math.pow(y,50)},tebi:{name:"tebi",symbol:"Ti",multiplier:Math.pow(y,40)},gibi:{name:"gibi",symbol:"Gi",multiplier:Math.pow(y,30)},mebi:{name:"mebi",symbol:"Mi",multiplier:Math.pow(y,20)},kibi:{name:"kibi",symbol:"Ki",multiplier:Math.pow(y,10)}};"yotta_zetta_exa_peta_tera_giga_mega_kilo_hecto_deca_deci_centi_milli_micro_nano_pico_femto_atto_zepto_yocto".split("_"),"Y_Z_E_P_T_G_M_k_h_da_d_c_m_µ_n_p_f_a_z_y".split("_"),"yobi_zebi_exbi_pebi_tebi_gibi_mebi_kibi".split("_"),"Yi_Zi_Ei_Pi_Ti_Gi_Mi_Ki".split("_");l={isNode:function(){return"undefined"!=typeof module&&"undefined"!=typeof module.exports},isAmd:function(){return"function"==typeof define&&define.amd},firstPropertyName:function(t){var e;for(e in t)if(t.hasOwnProperty(e))return e},forEach:function(t,e){var i,n;n=l.isArray(t);for(i in t)t.hasOwnProperty(i)&&e(t[i],n?parseInt(i):i,t)},isString:function(t){return"string"==typeof t},isNumber:function(t){return"number"==typeof t},isArray:function(t){return"[object Array]"===Object.prototype.toString.call(t)},isObject:function(t){return"object"==typeof t&&!l.isArray(t)}},i=function(t,e,n){var s;if(e||n)n?s={value:t,system:e,unit:n}:(s={value:t},n=e,l.isArray(n)||l.isObject(n)?s.dimensions=n:(s.unit=n,s.system=i.systemOfUnit(n)));else if(l.isNumber(t))s={value:t};else if(s=JSON.parse(t),null===s||"object"!=typeof s)throw new Error("Invalid parameters provided.");return new a(s.value,s.system,s.unit||s.dimensions)},i.configure=function(){},i.setSystems=function(t){if(t)if("object"==typeof t)n=t;else{if(!isNode())throw new Error("Cannot load file from string in client. Provide object instead.");n=require(t)}else;},i.filterUnits=function(){},i.add=function(e){e&&e.systems&&t(e.systems)},i.system=function(t){var e;if(e=n[t],!e)throw new Error('Specified system "'+t+'" does not exist');return e},i.hasSystem=function(t){return n[t]?!0:!1},i.unit=function(t,e){var n,s;if(n=i.system(t),s=n.units[e],!s)throw new Error('Specified unit "'+e+'" does not exist in the system "'+t+'"');return s},i.hasUnit=function(t,e){var n;return i.hasSystem(t)?(n=i.system(t),n.units[e]?!0:!1):!1},i.systemOfUnit=function(t){var e;return l.forEach(n,function(n,s){i.hasUnit(s,t)&&(e=s)}),e},i.baseUnit=function(t,e){var n=i.system(t),s=i.unit(t,e);n.baseUnit=s.name},r=function(){function t(t,e,n){var s;if(e)s={system:t,unit:e,power:n};else if(s=t,!l.isObject(s))if(i.systemOfUnit(s))s={unit:s};else if(s=JSON.parse(s),null===s||"object"!=typeof s)throw new Error("Invalid parameters provided.");this.unitName=s.unitName||s.unit,this.systemName=s.systemName||s.system||i.systemOfUnit(s.unitName||s.unit),this.power=null!==s.power&&void 0!==s.power?s.power:1}function e(e){return e&&e.constructor===t}function n(t,e,i,n){var s,o;for(o=t,s=0;s<Math.abs(e);s++)o=(n?e>0:0>e)?o*i.multiplier+i.offset:(o-i.offset)/i.multiplier;return o}return t.prototype.validate=function(){if(i.unit(this.systemName,this.unitName),0===this.power)throw new Exception("Dimensions may not have a power of 0")},t.prototype.unitIsBaseUnit=function(){return i.system(this.systemName).baseUnit===this.unitName},t.prototype.convert=function(t,e){var i=this.convertToBase();return i.dimension.convertFromBase(i.value,e)},t.prototype.convertToBase=function(t){var e,s,o;return this.unitIsBaseUnit()?{dimension:this.clone(),value:t}:(e=i.unit(this.systemName,this.unitName),s=i.system(this.systemName).baseUnit,o=i.unit(this.systemName,s),{dimension:new r(this.systemName,s,this.power),value:n(t,this.power,e,!0)})},t.prototype.convertFromBase=function(t,e){var s;if(!this.unitIsBaseUnit())throw new Error("The existing unit is not a base unit");return s=i.unit(this.systemName,e),{dimension:new r(this.systemName,e,this.power),value:n(t,this.power,s,!1)}},t.prototype.combine=function(t,e){var i,n,s;if(e.validate(),this.systemName!==e.systemName)throw new Error("Dimensions have different systems");return this.unitName!==e.unitName?(i=e.convert(t,this.unitName),s=i.value,n=this.power+i.dimension.power):(s=t,n=this.power+e.power),{dimension:new r(this.systemName,this.unitName,n),value:s}},t.prototype.isCommensurableMatch=function(t){if(!e(t))throw new Error("Provided parameter must be a Dimension");return this.systemName===t.systemName&&this.power===t.power},t.prototype.clone=function(){return new r(this.systemName,this.unitName,this.power)},t.prototype.invert=function(){return new r(this.systemName,this.unitName,-this.power)},t.prototype.serialised=function(){return{system:this.systemName,unit:this.unitName,power:this.power}},t.prototype.toJson=function(){return JSON.stringify(this.serialised())},t.prototype.toShortString=function(){var t,e;return t=i.unit(this.systemName,this.unitName),e=t.symbol,1!==this.power&&(e+="^"+this.power),e},t}(),a=function(){function t(t,e,i){var n,s=this;this.value=t,this.systemName=e,this.dimensions=[],l.isArray(i)?l.forEach(i,function(t){n=new r(t),n.validate(),s.dimensions.push(n)}):i&&(n=new r(e,i),n.validate(),this.dimensions.push(n)),this.validate()}function e(e){return e&&e.constructor===t}function n(t,e){var n,s;return s=[],n=t.value,l.forEach(t.dimensions,function(t){var o;i.hasUnit(t.systemName,e)?(o=t.convertFromBase(n,e),n=o.value,s.push(o.dimension)):s.push(t.clone())}),new a(n,t.systemName,s)}function s(t,e){return new a(e(t.value),t.systemName,t.dimensions)}return t.prototype.validate=function(){if("number"!=typeof this.value)throw new Error("The value of a quantity must be a number")},t.prototype.simplify=function(){var t=[],e=[],i=this.value,n=this;return l.forEach(this.dimensions,function(s,o){var r,a,m;if(!(e.indexOf(o)>=0)&&0!==s.power){for(r=s.clone(),a=o+1;a<n.dimensions.length;a++)s.systemName===n.dimensions[a].systemName&&(m=r.combine(i,n.dimensions[a]),r=m.dimension,i=m.value,e.push(a));0!==r.power&&t.push(r),e.push(o)}}),new a(this.value,this.systemName,t)},t.prototype.allDimensionsUsingBaseUnit=function(){var t=!0;return l.forEach(this.dimensions,function(e){e.unitIsBaseUnit()||(t=!1)}),t},t.prototype.isScalar=function(){return 0===this.dimensions.length},t.prototype.isCommensurable=function(t){if(!e(t))throw new Error("Cannot check the commensurability of something that is not a Quantity");if(0===this.dimensions.length&&0===t.dimensions.length)return!0;var i=this.simplify(),n=t.simplify();if(i.dimensions.length!==n.dimensions.length)return!1;var s=!0;return l.forEach(i.dimensions,function(t){var e=!1;l.forEach(n.dimensions,function(i){t.isCommensurableMatch(i)&&(e=!0)}),e||(s=!1)}),s},t.prototype.convert=function(t){var i,s=this.convertToBase();if(e(t)){if(!this.isCommensurable(t))throw new Error("In order to convert based upon a quantity they must be commensurable");i=s,l.forEach(t.dimensions,function(t){i=n(i,t.unitName)})}else i=n(s,t);return i},t.prototype.convertToBase=function(t){var e,i;return i=[],e=this.value,l.forEach(this.dimensions,function(n){var s;t&&n.unitName!==t?i.push(n.clone()):(s=n.convertToBase(e),e=s.value,i.push(s.dimension))}),new a(e,this.systemName,i)},t.prototype.multiply=function(t){if(l.isNumber(t))return new a(this.value*t,this.systemName,this.dimensions);if(!e(t))throw new Error("Cannot multiply something that is not a number or a Quantity.");var i=[];l.forEach(this.dimensions,function(t){i.push(t.clone())}),l.forEach(t.dimensions,function(t){i.push(t.clone())});var n=new a(this.value*t.value,this.systemName,i);return n.simplify()},t.prototype.divide=function(t){if(l.isNumber(t))return new a(this.value/t,this.systemName,this.dimensions);if(!e(t))throw new Error("Cannot divide something that is not a number or a Quantity.");var i=[];l.forEach(this.dimensions,function(t){i.push(t.clone())}),l.forEach(t.dimensions,function(t){i.push(t.invert())});var n=new a(this.value/t.value,this.systemName,i);return n.simplify()},t.prototype.add=function(t){if(l.isNumber(t))return new a(this.value+t,this.systemName,this.dimensions);if(!e(t))throw new Error("Cannot add something that is not a number or a Quantity");var i=t.convert(this);return new a(this.value+i.value,this.systemName,this.dimensions)},t.prototype.subtract=function(t){if(l.isNumber(t))return new a(this.value-t,this.systemName,this.dimensions);if(!e(t))throw new Error("Cannot subtract something that is not a number or a Quantity");var i=t.convert(this);return new a(this.value-i.value,this.systemName,this.dimensions)},t.prototype.times=function(t){return this.multiply(t)},t.prototype.plus=function(t){return this.add(t)},t.prototype.minus=function(t){return this.subtract(t)},t.prototype.abs=function(){return s(this,Math.abs)},t.prototype.acos=function(){return s(this,Math.acos)},t.prototype.asin=function(){return s(this,Math.asin)},t.prototype.atan=function(){return s(this,Math.atan)},t.prototype.ceil=function(){return s(this,Math.ceil)},t.prototype.cos=function(){return s(this,Math.cos)},t.prototype.exp=function(){return s(this,Math.exp)},t.prototype.floor=function(){return s(this,Math.floor)},t.prototype.log=function(){return s(this,Math.log)},t.prototype.round=function(){return s(this,Math.round)},t.prototype.sin=function(){return s(this,Math.sin)},t.prototype.sqrt=function(){return s(this,Math.sqrt)},t.prototype.tan=function(){return s(this,Math.tan)},t.prototype.atan2=function(t){return new a(Math.atan2(t,this.value),this.systemName,this.dimensions)},t.prototype.pow=function(t){return new a(Math.pow(this.value,t),this.systemName,this.dimensions)},t.prototype.max=function(){var t=[this.value].concat(Array.prototype.slice.call(arguments));return new a(Math.max.apply(null,t),this.systemName,this.dimensions)},t.prototype.min=function(){var t=[this.value].concat(Array.prototype.slice.call(arguments));return new a(Math.min.apply(null,t),this.systemName,this.dimensions)},t.prototype.serialised=function(){var t;return t={value:this.value},this.systemName&&(t.system=this.systemName),1===this.dimensions.length&&1===this.dimensions[0].power?t.unit=this.dimensions[0].unitName:this.dimensions.length>0&&(t.dimensions=[],l.forEach(this.dimensions,function(e){t.dimensions.push(e.serialised())})),t},t.prototype.toJson=function(){return JSON.stringify(this.serialised())},t.prototype.toShortFixed=function(t){var e=" ";return l.forEach(this.dimensions,function(t){e+=t.toShortString()}),e.length<=1&&(e=""),this.value.toFixed(t)+e},t.prototype.toShortPrecision=function(t){var e=" ";return l.forEach(this.dimensions,function(t){e+=t.toShortString()}),e.length<=1&&(e=""),this.value.toPrecision(t)+e},t}(),m={time:{symbol:"T",baseUnit:"second",units:[{name:"second",symbol:"s",otherSymbols:["sec"],type:"si"},{name:"minute",symbol:"min",type:"customary",multiplier:60},{name:"hour",symbol:"h",otherSymbols:["hr"],type:"customary",multiplier:3600},{name:"day",symbol:"day",type:"customary",multiplier:86400},{name:"week",symbol:"week",type:"customary",multiplier:604800},{name:"month",symbol:"month",type:"customary",estimation:!0,multiplier:2629740},{name:"year",symbol:"yr",type:"customary",multiplier:31557600},{name:"ke",symbol:"yr",type:"customary",systems:["traditional Chinese"],multiplier:864}]},length:{symbol:"L",baseUnit:"metre",units:[{name:"metre",symbol:"m",type:"si"}]},mass:{symbol:"M",baseUnit:"kilogram",units:[]},electricCurrent:{symbol:"I",baseUnit:"ampere",units:[]},temperature:{symbol:"Θ",baseUnit:"kelvin",units:[{name:"kelvin",symbol:"K",type:"si"},{name:"celsius",symbol:"C",type:"si",offset:273.15},{name:"fahrenheit",symbol:"F",type:"customary",multiplier:.5555555555555556,offset:255.37222222},{name:"rankine",symbol:"R",otherSymbols:["Ra"],type:"customary",multiplier:1.8},{name:"romer",symbol:"Rø",otherSymbols:["R"],type:"customary",multiplier:.525,offset:135.90375},{name:"newton",symbol:"N",type:"customary",multiplier:.33,offset:90.13949999999998},{name:"delisle",symbol:"D",type:"customary",multiplier:-1.5,offset:-559.7249999999999},{name:"reaumur",symbol:"Ré",otherSymbols:["Re","R"],type:"customary",multiplier:-1.5,offset:-559.7249999999999}]},amountOfSubstance:{symbol:"N",baseUnit:"mole",units:[]},luminousIntensity:{symbol:"J",baseUnit:"candela",units:[]},volume:{baseUnit:"litre",derived:"length*length*length",units:[]},area:{baseUnit:"meterSquared",derived:"length*length",units:[]},pressure:{baseUnit:"pascal",derived:"mass/length/time/time",units:[]},frequency:{baseUnit:"hertz",derived:"1/time",units:[]},force:{symbol:"F",baseUnit:"Newton",derived:"mass*length/time/time",units:[]},speed:{symbol:"v",baseUnit:"metersPerSecond",derived:"length/time",units:[]},acceleration:{symbol:"a",baseUnit:"metersPerSecondSquared",derived:"length/time/time",units:[]},energy:{symbol:"E",baseUnit:"joule",derived:"mass*length*length/time/time",units:[]},power:{symbol:"P",baseUnit:"watt",derived:"mass*length*length/time/time/time",units:[]},electricCharge:{baseUnit:"coulomb",derived:"electricCurrent/time",units:[]},electricPotential:{symbol:"V",baseUnit:"volt",derived:"mass*length*length/electricCurrent/time/time/time",units:[]},electricResistance:{baseUnit:"ohm",derived:"mass*length*length/time/time/time/electricCurrent/electricCurrent",units:[]},capacitance:{baseUnit:"farad",derived:"time*time*time*time*electricCurrent*electricCurrent/length/length/mass",units:[]},information:{baseUnit:"bit",units:[{name:"bit",symbol:"b",type:"binary"},{name:"byte",symbol:"B",type:"binary",multiplier:8}]}},i.add({systems:m}),u=function(){function t(){}return t}(),l.isNode()?module.exports=i:l.isAmd()?define([],function(){return i}):window.measurement=i}();